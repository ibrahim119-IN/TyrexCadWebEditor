name: Build OpenCascade.js

on: [push]

jobs:
  build:
    name: Build OpenCascade.js Beta (Standard + Combined)
    if: contains(github.event.head_commit.message, 'ci_default')
    runs-on: [self-hosted, combined]
    timeout-minutes: 600
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Generate version number
        id: version
        run: |
          if ${{ github.ref == 'refs/heads/beta' }}
          then
            export NEW_OPENCASCADEJS_VERSION=$(node -p -e "require('./package.json').version.split('-')[0]")-beta.$(git log --pretty=format:'%h' -n 1)
            echo "::set-output name=version::$NEW_OPENCASCADEJS_VERSION"
            echo "::set-output name=tags::$NEW_OPENCASCADEJS_VERSION,latest"
          else
            echo "::set-output name=tags::latest"
          fi

      - name: Build OpenCascade.js Docker Image
        uses: whoan/docker-build-with-cache-action@v5
        timeout-minutes: 600
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          image_name: donalffons/opencascade.js
          pull_image_and_stages: true
          push_image_and_stages: ${{ github.ref == 'refs/heads/beta' }}
          image_tag: ${{steps.version.outputs.tags}}

      - name: Build OpenCascade.js Standard Modules
        timeout-minutes: 600
        run: |
          cd dist
          docker run \
            -v $(pwd):/opencascade.js/dist \
            -u $(id -u):$(id -g) \
            donalffons/opencascade.js
          cd ..

      - name: Build OpenCascade.js Combined Modules
        timeout-minutes: 600
        run: |
          cd dist
          docker run \
            -v $(pwd):/src \
            -u $(id -u):$(id -g) \
            donalffons/opencascade.js \
            /opencascade.js/src/builds/opencascade.combined.yml
          cd ..

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: dist
          path: ./dist/

      - name: Git and NPM config
        if: github.ref == 'refs/heads/beta'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          npm set //registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}

      - name: Publish new beta version to NPM
        if: github.ref == 'refs/heads/beta'
        run: |
          npm version ${{steps.version.outputs.version}} --force
          npm publish --tag=beta

      - name: Commit Build Artifacts in dist
        if: github.ref == 'refs/heads/beta'
        run: |
          git add -A
          git diff-index --quiet HEAD || git commit -m "Build OpenCascade.js"

      - name: Push Changes to branch
        if: github.ref == 'refs/heads/beta'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  # test:
  #   name: Test OpenCascade.js
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2
  #       with:
  #         lfs: true
  #     - name: Build Docker Image
  #       uses: whoan/docker-build-with-cache-action@v5
  #       with:
  #         username: donalffons
  #         password: "${{ secrets.GITHUB_TOKEN }}"
  #         registry: docker.pkg.github.com
  #         image_name: opencascade.js
  #     - name: List Docker Images
  #       run: docker image ls
  #     - name: Run Tests
  #       run: |
  #         docker run --init \
  #           -v "$(pwd)/build/":"/opencascade/build/" \
  #           -v "$(pwd)/dist/":"/opencascade/dist/" \
  #           -v "$(pwd)/emscripten-cache/":"/emscripten/upstream/emscripten/cache/" \
  #           -v "$(pwd)/embind/":"/opencascade/embind/" \
  #           my_awesome_image test

