Sending build context to Docker daemon  713.2kB
Step 1/40 : FROM emscripten/emsdk:2.0.23
2.0.23: Pulling from emscripten/emsdk
345e3491a907: Already exists
57671312ef6f: Already exists
5e9250ddb7d0: Already exists
3e7b89dc7963: Already exists
273eeb73b35d: Already exists
255add99e294: Already exists
3d11da9d77d1: Already exists
Digest: sha256:5871ba43a788243cbf890e2cb1a95e33e9cb72dcf52e1d2077ca39f2171f8b07
Status: Downloaded newer image for emscripten/emsdk:2.0.23
 ---> 97101b3a8f1a
Step 2/40 : RUN apt update -y
 ---> Using cache
 ---> 504affd1da00
Step 3/40 : RUN apt install -y build-essential python3 python3-pip git cmake bash curl npm
 ---> Using cache
 ---> 5dc8137ce64e
Step 4/40 : WORKDIR /python/
 ---> Using cache
 ---> 2ba2f16f8df7
Step 5/40 : RUN   apt install -y     build-essential     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libsqlite3-dev     libreadline-dev     libffi-dev     curl     libbz2-dev     python3-setuptools
 ---> Using cache
 ---> 6cdf1062a6b9
Step 6/40 : WORKDIR /clang/
 ---> Using cache
 ---> 6f87ec232029
Step 7/40 : RUN curl -SL https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz  | tar -xJC . &&  mv clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04 clang_11 &&  PATH=/clang/clang_11/bin:$PATH &&  LD_LIBRARY_PATH=/clang/clang_11/lib:$LD_LIBRARY_PATH
 ---> Using cache
 ---> 806100e89820
Step 8/40 : RUN PATH=/clang/clang_11/lib:$PATH
 ---> Using cache
 ---> fd31f75e48cf
Step 9/40 : RUN LD_LIBRARY_PATH=/clang/clang_11/lib:$LD_LIBRARY_PATHLD_LIBRARY_PATH
 ---> Using cache
 ---> c31964a4d9ff
Step 10/40 : RUN   cd clang_11/lib &&   ln -s libclang.so.11 libclang-11.so
 ---> Using cache
 ---> f97f54fb39be
Step 11/40 : RUN apt install -y libncurses5 libncurses6 libncurses5-dev libncursesw5-dev
 ---> Using cache
 ---> b7b6be0736ac
Step 12/40 : RUN apt install -y git autoconf gperf libtool gettext autopoint pkg-config
 ---> Using cache
 ---> c511de4e7da5
Step 13/40 : WORKDIR /freetype/
 ---> Using cache
 ---> 8f8367b148aa
Step 14/40 : RUN   git clone https://git.savannah.nongnu.org/git/freetype/freetype2.git .
 ---> Using cache
 ---> a6285f6d27d0
Step 15/40 : WORKDIR /expat/
 ---> Using cache
 ---> 83c73d17bee6
Step 16/40 : RUN   git clone https://github.com/libexpat/libexpat.git . &&   git checkout R_2_2_10
 ---> Using cache
 ---> 1939bcee8844
Step 17/40 : WORKDIR /expat/expat/
 ---> Using cache
 ---> 6110b42e3099
Step 18/40 : RUN   ./buildconf.sh &&   emconfigure ./configure --enable-static=yes --enable-shared=no &&   emmake make
 ---> Using cache
 ---> 4ace83ad31f3
Step 19/40 : WORKDIR /fontconfig/
 ---> Using cache
 ---> 731253c7f8c9
Step 20/40 : RUN   git clone https://gitlab.freedesktop.org/fontconfig/fontconfig.git .
 ---> Using cache
 ---> 868e34bf4a15
Step 21/40 : RUN   CFLAGS="-D__linux__ -I/freetype/include" LDFLAGS="-s USE_FREETYPE=1" FREETYPE_CFLAGS=" " FREETYPE_LIBS=" " emconfigure ./autogen.sh --with-expat-includes=/expat/expat/lib/ --with-expat-lib=/expat/expat/lib/.libs/ --enable-static=yes --enable-shared=no &&   emmake make
 ---> Using cache
 ---> b7b1258c539a
Step 22/40 : RUN   apt install -y gnupg &&   curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - &&   echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list &&   apt update && apt install -y yarn
 ---> Using cache
 ---> c2f46cde2983
Step 23/40 : WORKDIR /rapidjson/
 ---> Using cache
 ---> 0caf56080186
Step 24/40 : RUN   git clone https://github.com/Tencent/rapidjson.git .
 ---> Using cache
 ---> 1586b9e5551b
Step 25/40 : ENV OCCT_COMMIT_HASH_FULL 0dc2c377fc5a2d8cf065f4ec005e356240cb484c
 ---> Using cache
 ---> 0ef716f06e0b
Step 26/40 : ENV OCCT_COMMIT_HASH 0dc2c37
 ---> Using cache
 ---> 4cdb06c9c731
Step 27/40 : WORKDIR /occt/
 ---> Using cache
 ---> f01f106e0fb2
Step 28/40 : RUN   curl "https://git.dev.opencascade.org/gitweb/?p=occt.git;a=snapshot;h=${OCCT_COMMIT_HASH_FULL};sf=tgz" -o occt.tar.gz &&   tar -xvf occt.tar.gz
 ---> Using cache
 ---> c3ff652f4035
Step 29/40 : RUN   curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash &&   apt-get install git-lfs &&   git lfs install
 ---> Using cache
 ---> 30c6b5f6ad2b
Step 30/40 : RUN   apt update -y &&   apt install build-essential -y &&   pip3 install clang
 ---> Using cache
 ---> cb38233e1186
Step 31/40 : RUN   apt update -y &&   DEBIAN_FRONTEND=noninteractive apt upgrade -y &&   pip3 install pyyaml patch
 ---> Using cache
 ---> 2196d3f77f07
Step 32/40 : RUN   apt install -y bison flex
 ---> Using cache
 ---> 1f5f6c686cd2
Step 33/40 : RUN   mkdir /opencascade.js/ &&   mkdir /opencascade.js/build/ &&   mkdir /opencascade.js/dist/
 ---> Using cache
 ---> a89cd86b7022
Step 34/40 : WORKDIR /opencascade.js/
 ---> Using cache
 ---> 0cac6ad946f2
Step 35/40 : COPY src_build src_build
 ---> Using cache
 ---> 0b07b2acbbc5
Step 36/40 : RUN   /opencascade.js/src_build/applyPatches.py &&   /opencascade.js/src_build/compile.py
 ---> Using cache
 ---> 7f30893f6c3d
Step 37/40 : COPY . .
 ---> f0e501e43392
Step 38/40 : RUN chmod -R 777 .
 ---> Running in d6b957cb1b65
Removing intermediate container d6b957cb1b65
 ---> 84a34a7a2ae1
Step 39/40 : WORKDIR /src/
 ---> Running in eaed5857876c
Removing intermediate container eaed5857876c
 ---> 26fd810f257b
Step 40/40 : ENTRYPOINT [ "/opencascade.js/src/run.sh" ]
 ---> Running in c23498d32f52
Removing intermediate container c23498d32f52
 ---> 0f9174a13ce5
Successfully built 0f9174a13ce5
Successfully tagged my_awesome_image:latest
